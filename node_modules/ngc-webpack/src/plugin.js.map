{"version":3,"file":"plugin.js","sourceRoot":"","sources":["../../src/plugin.ts"],"names":[],"mappings":"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","sourcesContent":["import { AngularCompilerPlugin } from '@ngtools/webpack';\n\nimport { NgcWebpackPluginOptions } from './plugin-options'\nimport { MonkeyAngularCompilerPlugin } from './monkies';\nimport { hasHook, withHook, isValidAngularCompilerPlugin } from './utils';\nimport { WebpackResourceLoader } from './resource-loader';\n\nexport class NgcWebpackPlugin {\n  private ngcWebpackPluginOptions: NgcWebpackPluginOptions;\n  private angularCompilerPlugin: MonkeyAngularCompilerPlugin;\n  private valid: boolean;\n\n  constructor(options: NgcWebpackPluginOptions) {\n    if (options.hasOwnProperty('AOT')) {\n      if (!options.hasOwnProperty('skipCodeGeneration')) {\n        options.skipCodeGeneration = !options.AOT;\n      }\n      delete options.AOT;\n    }\n\n    this.ngcWebpackPluginOptions = options;\n    this.angularCompilerPlugin = <any> new AngularCompilerPlugin(options);\n\n    this.valid = isValidAngularCompilerPlugin(this.angularCompilerPlugin);\n    if (!this.valid) {\n      throw new Error('The \"@ngtools/webpack\" package installed is not compatible with this ' +\n        'version of \"ngc-webpack\"');\n    }\n  }\n\n  apply(compiler: any) {\n    if (!this.valid) {\n      return;\n    }\n\n    const ngcOptions = this.ngcWebpackPluginOptions;\n    const ngPlugin = this.angularCompilerPlugin;\n    const compilerHost = ngPlugin._compilerHost;\n\n    withHook(ngcOptions, 'beforeRun', beforeRun => {\n      let ran = false;\n      const run = (cmp, next) => {\n        if (ran) {\n          next();\n          return;\n        }\n        // for now, run once\n        // TODO: add hook for watch mode to notify on watch-run\n        ran = true;\n        const webpackResourceLoader = new WebpackResourceLoader();\n        webpackResourceLoader.update(compiler.createCompilation());\n        Promise.resolve(beforeRun(webpackResourceLoader)).then(next).catch(next);\n      }\n      compiler.plugin('run', run);\n      compiler.plugin('watch-run', run);\n    });\n\n    ngPlugin.apply(compiler);\n\n    if (ngcOptions.tsTransformers) {\n      if (ngcOptions.tsTransformers.before) {\n        this.angularCompilerPlugin._transformers.push(...ngcOptions.tsTransformers.before);\n      }\n      if (ngcOptions.tsTransformers.after) {\n\n      }\n    }\n\n    if (ngcOptions.readFileTransformer) {\n      const orgReadFile = compilerHost.readFile;\n      const { predicate, transform } = ngcOptions.readFileTransformer;\n      const predicateFn = typeof predicate === 'function'\n        ? predicate\n        : (fileName: string) => predicate.test(fileName)\n      ;\n\n      compilerHost.readFile = (fileName: string): string => {\n        if (predicateFn(fileName)) {\n          let stats = compilerHost._files[fileName];\n          if (!stats) {\n            const content = transform(fileName, orgReadFile.call(compilerHost, fileName));\n            stats = compilerHost._files[fileName];\n            if (stats) {\n              stats.content = content;\n            }\n            return content;\n          }\n        }\n        return orgReadFile.call(compilerHost, fileName);\n      }\n    }\n\n    if (hasHook(ngcOptions, ['resourcePathTransformer', 'resourceTransformer']).some( v => v) ) {\n      const resourceGet = compilerHost._resourceLoader.get;\n      compilerHost._resourceLoader.get = (filePath: string): Promise<string> => {\n        withHook(ngcOptions, 'resourcePathTransformer', resourcePath => {\n          filePath = ngcOptions.resourcePathTransformer(filePath);\n        });\n\n        let p = resourceGet.call(compilerHost._resourceLoader, filePath);\n        withHook(ngcOptions, 'resourceTransformer', resource => {\n          p = p.then( content => Promise.resolve(resource(filePath, content)) );\n        });\n        return p;\n      }\n    }\n  }\n}"]}